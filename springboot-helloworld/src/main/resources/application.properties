
#命令行设置
#SpringApplication.setAddCommandLineProperties(false) 禁止使用命令行来设置属性值
#java -jar xxx.jar --server.port=8888

#多环境配置
#Spring Boot中多环境配置文件名需要满足
#application-{profile}.properties的格式，其中{profile}对应你的环境标识
#至于哪个具体的配置文件会被加载，需要在application.properties文件中通过
#spring.profiles.active属性来设置，其值对应{profile}值  eg:spring.profiles.active=test


com.huiy.springboot.name=huiylove
com.huiy.springboot.title=SpringBoot
com.huiy.springboot.desc=${com.huiy.springboot.name}正在学习${com.huiy.springboot.title}

#配置为测试环境
spring.profiles.active=test

#配置Thymeleaf模板引擎
# Enable template caching.
#spring.thymeleaf.cache=true 
## Check that the templates location exists.
#spring.thymeleaf.check-template-location=true 
## Content-Type value.
#spring.thymeleaf.content-type=text/html 
## Enable MVC Thymeleaf view resolution.
#spring.thymeleaf.enabled=true 
## Template encoding.
#spring.thymeleaf.encoding=UTF-8 
## Comma-separated list of view names that should be excluded from resolution.
#spring.thymeleaf.excluded-view-names= 
## Template mode to be applied to templates. See also StandardTemplateModeHandlers.
#spring.thymeleaf.mode=HTML5 
## Prefix that gets prepended to view names when building a URL.
#spring.thymeleaf.prefix=classpath:/templates/ 
## Suffix that gets appended to view names when building a URL.
#spring.thymeleaf.suffix=.html  
#spring.thymeleaf.template-resolver-order= 
## Order of the template resolver in the chain. 
#spring.thymeleaf.view-names= 
## Comma-separated list of view names that can be resolved.

#配置数据库连接属性
spring.datasource.url=jdbc:mysql://localhost:3306/sb-jdbc
spring.datasource.username=root
spring.datasource.password=111111
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#Jpa相关配置
#spring.jpa.properties.hibernate.hbm2ddl.auto=create
#create-drop 创建后删除
#update 更新
#开启对sql语句的打印
spring.jpa.properties.hibernate.show_sql=true

#日志配置
#logging.file=my.log
#logging.path=/var/log
logging.config=classpath:log4j2-spring.xml

# LOG4J配置 按不同package进行输出   com.didispace包名 
#log4j.category.com.didispace=DEBUG, didifile
#log4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.didifile.file=logs/my.log
#log4j.appender.didifile.DatePattern='.'yyyy-MM-dd
#log4j.appender.didifile.layout=org.apache.log4j.PatternLayout
#log4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=100

#配置mybatis
mybatis.mapper-locations=classpath*:mapper/*Mapper.xml 
mybatis.type-aliases-package=com.huiy.springboothelloworld.mysql.model 


#配置缓存类型
#spring.cache.type=
#EhCache的配置文件
#spring.cache.ehcache.config=classpath:config/another-config.xml

